plugins {
    // Ref here: https://docs.gradle.org/7.4.1/userguide/publishing_setup.html
    id 'java-library'
    id 'application'
    id 'signing'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

group = 'ro.ghionoiu'
version = project.version.toString()

repositories {
    mavenCentral()
    mavenLocal()
}


dependencies {
    implementation 'org.eclipse.jgit:org.eclipse.jgit:4.8.0.201706111038-r'
    implementation 'org.eclipse.jgit:org.eclipse.jgit.archive:4.8.0.201706111038-r'
    implementation 'com.googlecode.java-diff-utils:diffutils:1.3.0'
    implementation 'com.google.code.gson:gson:2.8.0'

    implementation 'commons-io:commons-io:2.5'
    implementation 'com.beust:jcommander:1.72'
    implementation 'org.apache.commons:commons-compress:1.3'

    implementation 'org.slf4j:slf4j-api:1.7.25'
    implementation 'ch.qos.logback:logback-classic:1.1.3'

    testImplementation 'commons-codec:commons-codec:1.10'
    testImplementation('org.junit.jupiter:junit-jupiter:5.9.1')
    testImplementation('org.junit.platform:junit-platform-suite:1.8.1')
    testImplementation 'org.hamcrest:hamcrest-all:1.3'
}

test {
    useJUnitPlatform()
    systemProperty("cucumber.junit-platform.naming-strategy", "long")
    testLogging {
        events "passed", "skipped", "failed"
    }
}

mainClassName = "tdl.record.sourcecode.App"
jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
}

java {
    withSourcesJar()
    withJavadocJar()
}

// Suppress Javadoc warnings
javadoc {
    options.addStringOption('Xdoclint:none', '-quiet')
}



// Refs:
// https://stackoverflow.com/a/68505768
publishing {
    publications {
        release(MavenPublication) {
            from components.java
            pom {
                name = 'Programming Session Recorder'
                description = 'Library designed for recording source code from programming sessions.'
                url = 'https://github.com/julianghionoiu/dev-sourcecode-record'
                licenses {
                    license {
                        name = 'Apache License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        name = 'Iulian (Julian) Ghionoiu'
                        email = 'iulian.ghionoiu@gmail.com'
                        organization = 'Iulian Ghionoiu'
                        organizationUrl = 'https://github.com/julianghionoiu'
                    }
                }
                scm {
                    connection = 'scm:git:git@github.com:julianghionoiu/dev-sourcecode-record.git'
                    developerConnection = 'scm:git:git@github.com:julianghionoiu/dev-sourcecode-record.git'
                    url = 'git@github.com:julianghionoiu/dev-sourcecode-record.git'
                }
            }
        }
    }
    repositories {
        maven {
            url = uri("https://oss.sonatype.org/service/local/staging/deploy/maven2/")
            credentials {
                username = project.findProperty('mavenCentralUsername')
                password = project.findProperty('mavenCentralPassword')
            }
        }
    }
}

// Signs using gpg-agent
// Key name configured under "~/.gradle/gradle.properties"
//
// Refs:
// https://docs.gradle.org/7.4.1/userguide/signing_plugin.html#sec:using_gpg_agent
signing {
    useGpgCmd()
    sign publishing.publications.release
}
